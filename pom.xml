<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>eu.openanalytics.phaedra</groupId>
    <artifactId>phaedra2-parent</artifactId>
    <packaging>pom</packaging>
    <name>Phaedra2 Parent POM</name>
    <version>2.9.0</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.1</version>
        <relativePath/>
    </parent>

    <properties>
		<docker.imageName>openanalytics/${project.artifactId}</docker.imageName>
		<java.version>21</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <phaedra2-commons.version>2.9.0</phaedra2-commons.version>
        <spring-boot.version>3.3.1</spring-boot.version>
        <spring-cloud.version>2021.0.3</spring-cloud.version>
        <lombok.version>1.18.30</lombok.version>
        <aws.version>2.2.6.RELEASE</aws.version>
        <spring-kafka.version>3.2.1</spring-kafka.version>
        <kafka-streams.version>3.3.1</kafka-streams.version>
        <fabric8-docker-maven.version>0.37.0</fabric8-docker-maven.version>
        <jacoco-maven.version>0.8.12</jacoco-maven.version>
        <mycila-maven.version>1.9.0</mycila-maven.version>
        <springdoc.version>2.6.0</springdoc.version>
        <liquibase.version>4.28.0</liquibase.version>
        <testcontainers.version>1.15.3</testcontainers.version>
        <gitflow-maven.version>1.21.0</gitflow-maven.version>
    </properties>

    <repositories>
        <!-- Maven queries repositories in the order that they are defined here.
         Usually, the Maven Central repository is the last one in this order, because it's defined in the super POM.
         This means that for all dependencies which are downloaded from Maven Central, the custom repositories are
         queried first, which slows down the build a lot.
         Therefore we add central as the first repository in this list.
         This reduces the time to download dependencies on a fresh machine from ~20-30min to 1min
         See: https://maven.apache.org/ref/3.6.3/maven-model-builder/super-pom.html for the origin of this configuration
         -->
        <repository>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
            <layout>default</layout>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>oa-nexus-snapshots</id>
            <url>https://nexus.openanalytics.eu/repository/snapshots/</url>
        </repository>
        <repository>
            <id>oa-nexus-releases</id>
            <url>https://nexus.openanalytics.eu/repository/releases/</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- Development tools -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Spring Boot Starters -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-security</artifactId>
	    </dependency>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-graphql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.graphql</groupId>
            <artifactId>spring-graphql-test</artifactId>
        </dependency>

        <dependency>
            <groupId>eu.openanalytics.phaedra</groupId>
            <artifactId>phaedra2-commons</artifactId>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.modelmapper.extensions</groupId>
            <artifactId>modelmapper-spring</artifactId>
        </dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.mattbertolini</groupId>
            <artifactId>liquibase-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <!-- Spring dependencies -->
            <!-- Spring Boot: Web using Undertow instead of Tomcat -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-tomcat</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Spring Boot: JDBC Data -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jdbc</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-actuator</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-graphql</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <!-- Phaedra2 Commons -->
            <dependency>
                <groupId>eu.openanalytics.phaedra</groupId>
                <artifactId>phaedra2-commons</artifactId>
                <version>${phaedra2-commons.version}</version>
            </dependency>

            <!-- Amazon AWS -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-aws</artifactId>
                <version>${aws.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-aws-autoconfigure</artifactId>
                <version>${aws.version}</version>
            </dependency>

            <!-- Swagger dependencies -->
			<dependency>
			    <groupId>org.springdoc</groupId>
			    <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>

			<!-- Apache Kafka dependencies -->
			<dependency>
	            <groupId>org.apache.kafka</groupId>
	            <artifactId>kafka-streams</artifactId>
	            <version>${kafka-streams.version}</version>
	        </dependency>
	        <dependency>
	            <groupId>org.springframework.kafka</groupId>
	            <artifactId>spring-kafka</artifactId>
	            <version>${spring-kafka.version}</version>
	        </dependency>

            <!-- Apache commons dependencies -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>4.4</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.12.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-math3</artifactId>
                <version>3.6.1</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>2.6</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>19.0</version>
            </dependency>
            <dependency>
                <groupId>jakarta.validation</groupId>
                <artifactId>jakarta.validation-api</artifactId>
                <version>3.1.0</version>
            </dependency>

            <!-- Model mapper spring dependencies-->
            <dependency>
                <groupId>org.modelmapper.extensions</groupId>
                <artifactId>modelmapper-spring</artifactId>
                <version>3.2.0</version>
            </dependency>

            <!-- Liquibase dependencies -->
            <dependency>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-core</artifactId>
                <version>${liquibase.version}</version>
            </dependency>
            <dependency>
                <groupId>com.mattbertolini</groupId>
                <artifactId>liquibase-slf4j</artifactId>
                <version>4.0.0</version>
            </dependency>

            <!-- Test dependencies -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
	            <exclusions>
	                <exclusion>
	                    <groupId>org.junit.vintage</groupId>
	                    <artifactId>junit-vintage-engine</artifactId>
	                </exclusion>
	            </exclusions>
            </dependency>
	        <dependency>
	            <groupId>org.testcontainers</groupId>
	            <artifactId>testcontainers</artifactId>
	            <version>${testcontainers.version}</version>
	            <scope>test</scope>
	        </dependency>
	        <dependency>
	            <groupId>org.testcontainers</groupId>
	            <artifactId>junit-jupiter</artifactId>
	            <version>${testcontainers.version}</version>
	            <scope>test</scope>
	        </dependency>
	        <dependency>
	            <groupId>org.testcontainers</groupId>
	            <artifactId>postgresql</artifactId>
	            <version>${testcontainers.version}</version>
	            <scope>test</scope>
	        </dependency>
			<dependency>
	            <groupId>org.testcontainers</groupId>
	            <artifactId>kafka</artifactId>
	            <version>${testcontainers.version}</version>
        	</dependency>
	        <dependency>
	            <groupId>org.junit.platform</groupId>
	            <artifactId>junit-platform-launcher</artifactId>
	            <version>1.10.0</version>
	            <scope>test</scope>
	        </dependency>
        </dependencies>
    </dependencyManagement>

	<build>
		<pluginManagement>
		    <plugins>
	            <plugin>
	                <groupId>org.springframework.boot</groupId>
	                <artifactId>spring-boot-maven-plugin</artifactId>
	                <configuration>
	                    <excludes>
	                        <exclude>
	                            <groupId>org.projectlombok</groupId>
	                            <artifactId>lombok</artifactId>
	                        </exclude>
	                    </excludes>
	                </configuration>
	            </plugin>

			    <plugin>
				    <groupId>org.codehaus.mojo</groupId>
				    <artifactId>build-helper-maven-plugin</artifactId>
				    <version>3.5.0</version>
				    <executions>
				        <execution>
				            <phase>validate</phase>
				            <goals>
				                <goal>regex-property</goal>
				            </goals>
				            <configuration>
				                <name>docker.imageNameSuffix</name>
				                <value>${project.version}</value>
				                <regex>[0-9]+.[0-9]+.[0-9]+(.*)</regex>
				                <replacement>$1</replacement>
				                <toLowerCase>true</toLowerCase>
				                <failIfNoMatch>true</failIfNoMatch>
				            </configuration>
				        </execution>
				    </executions>
				</plugin>

	            <plugin>
	                <groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${fabric8-docker-maven.version}</version>
					<configuration>
						<images>
							<image>
								<name>${docker.imageName}${docker.imageNameSuffix}</name>
								<build>
									<dockerFile>${project.basedir}/Dockerfile.app</dockerFile>
									<tags>
										<tag>${project.version}</tag>
									</tags>
									<args>
										<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
									</args>
								</build>
							</image>
	                        <image>
	                        	<name>${docker.imageName}.liquibase${docker.imageNameSuffix}</name>
	                            <build>
	                                <dockerFile>${project.basedir}/Dockerfile.db</dockerFile>
	                                <tags>
	                                    <tag>${project.version}</tag>
	                                </tags>
	                            </build>
	                        </image>
						</images>
					</configuration>
					<executions>
						<execution>
							<phase>install</phase>
							<goals>
								<goal>build</goal>
							</goals>
						</execution>
					</executions>
	            </plugin>

	            <plugin>
	                <groupId>org.jacoco</groupId>
	                <artifactId>jacoco-maven-plugin</artifactId>
	                <version>${jacoco-maven.version}</version>
	                <executions>
	                    <execution>
	                        <goals>
	                            <goal>prepare-agent</goal>
	                        </goals>
	                    </execution>
	                    <execution>
	                        <id>report</id>
	                        <phase>prepare-package</phase>
	                        <goals>
	                            <goal>report</goal>
	                        </goals>
	                    </execution>
	                </executions>
	            </plugin>

	            <plugin>
	                <groupId>com.mycila.maven-license-plugin</groupId>
	                <artifactId>maven-license-plugin</artifactId>
	                <version>${mycila-maven.version}</version>
	                <configuration>
	                    <header>LICENSE_HEADER</header>
	                    <aggregate>true</aggregate>
	                    <strictCheck>true</strictCheck>
	                    <excludes>
	                        <exclude>**/*.log</exclude>
	                        <exclude>**/*.properties</exclude>
	                        <exclude>**/*.yml</exclude>
	                        <exclude>**/*.yaml</exclude>
	                        <exclude>**/*.config</exclude>
	                        <exclude>**/*.xml</exclude>
	                        <exclude>**/*.json</exclude>
	                        <exclude>**/*.sql</exclude>
	                        <exclude>**/*.sh</exclude>
	                        <exclude>LICENSE</exclude>
	                        <exclude>LICENSE_HEADER</exclude>
	                        <exclude>README.md</exclude>
	                        <exclude>.gitignore</exclude>
	                        <exclude>**/Dockerfile.app</exclude>
	                        <exclude>**/Dockerfile.db</exclude>
	                        <exclude>Jenkinsfile</exclude>
	                    </excludes>
	                </configuration>
	                <executions>
	                    <execution>
	                        <id>generate-copyright-headers</id>
	                        <phase>process-sources</phase>
	                        <goals>
	                            <goal>format</goal>
	                        </goals>
	                    </execution>
	                    <execution>
	                    	<id>check-copyright-headers</id>
	                    	<phase>package</phase>
	                    	<goals>
	                    		<goal>check</goal>
	                    	</goals>
	                    </execution>
	                </executions>
	            </plugin>

	            <plugin>
			        <groupId>com.amashchenko.maven.plugin</groupId>
			        <artifactId>gitflow-maven-plugin</artifactId>
			        <version>${gitflow-maven.version}</version>
			    </plugin>
	        </plugins>
		</pluginManagement>
	</build>

    <distributionManagement>
        <snapshotRepository>
            <id>oa-nexus-snapshots</id>
            <name>OpenAnalytics Snapshots Repository</name>
            <url>https://nexus.openanalytics.eu/repository/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>oa-nexus-releases</id>
            <name>OpenAnalytics Release Repository</name>
            <url>https://nexus.openanalytics.eu/repository/releases</url>
        </repository>
    </distributionManagement>

</project>
